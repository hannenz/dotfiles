# Our .tmux.conf file

# Setting the prefix from C-b to C-a
set -g prefix C-a
# Free the original Ctrl-b prefix keybinding
unbind C-b
#setting the delay between prefix and command
set -s escape-time 1
# Ensure that we can send Ctrl-A to other apps
bind C-a send-prefix

# Set the base index for windows to 1 instead of 0
set -g base-index 1

# Set the base index for panes to 1 instead of 0
setw -g pane-base-index 1

# Reload the file with Prefix r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# srplitting panes with | and -
bind | split-window -h
bind - split-window -v

# moving between panes with Prefix h,j,k,l
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Quick window selection
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Pane resizing panes with Prefix H,J,K,L
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
# mouse support - set to on if you want to use the mouse
set -g mouse on
# set -g mouse-resize-pane on
# set -g mouse-select-pane on
# set -g mouse-select-window on


# Enable True-Color
# 2019-08-29
# From: https://jdhao.github.io/2018/10/19/tmux_nvim_true_color/
# This works for:
# - True color in- and outside tmux
# - italics
# - colorscheme vim-one in vim inside (and outside) tmux
# - Tested in iTerm2 (OSX)
set -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ",xterm-256color*:Tc"


# set the status line's colors
set -g status-style fg=white,bg=black

# set the color of the window list
setw -g window-status-style fg=cyan,bg=black

# set colors for the active window
setw -g window-status-current-style fg=white,bold,bg=red

# colors for pane borders
setw -g pane-border-style fg=green,bg=black
setw -g pane-active-border-style fg=white,bg=yellow

# active pane normal, other shaded out
#setw -g window-style fg=colour240,bg=colour235
#setw -g window-active-style fg=white,bg=black

# Command / message line
set -g message-style fg=white,bold,bg=black

# Status line left side to show Session:window:pane
set -g status-left-length 40
set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"

# Status line right side -  31-Oct 13:37
set -g status-right "#(battery) #[fg=cyan]%d %b %R"

# Update the status line every sixty seconds
set -g status-interval 60

# Center the window list in the status line
set -g status-justify centre

# enable activity alerts
#setw -g monitor-activity on
#set -g visual-activity on

# enable vi keys.
setw -g mode-keys vi

# Powerline
# if-shell "uname | grep -q Linux" "source-file ~/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf"

# VIM Integration (VIM Plugin vim-tmux-navigator)
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# run-shell "~/.tmux/themes/nord-tmux/nord.tmux"

# Copy to clipboard


# Themes from https://github.com/jimeh/tmux-themepack
# source-file ${HOME}/.tmux-themepack/powerline/block/cyan.tmuxtheme
source-file ~/dotfiles/themer-one/tmux/themer-tmux.dark.default.v0.tmuxtheme



# OSX only! Move to seperate file!
if-shell 'test "$(uname)" = "Darwin"' 'source ~/.tmux-osx.conf'
if-shell 'test "$(uname)" = "Linux"' 'source ~/.tmux-linux.conf'


# Inspired by https://zserge.com/posts/tmux/
bind-key -n M-n new-window -c "#{pane_current_path}"
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9
bind-key -n M-h select-pane -L
bind-key -n M-j select-pane -D
bind-key -n M-k select-pane -U
bind-key -n M-l select-pane -R
bind-key -n M-f resize-pane -Z
bind-key -n M-b split-window -v -c "#{pane_current_path}"
bind-key -n M-v split-window -h -c "#{pane_current_path}"
bind-key -n M-, select-window -p
bind-key -n M-. select-window -n
bind-key -n M-x confirm-before "kill-pane"
bind-key -n M-X confirm-before "kill-window"
bind-key -n "M-H" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -L; tmux swap-pane -t $old'
bind-key -n "M-J" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -D; tmux swap-pane -t $old'
bind-key -n "M-K" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -U; tmux swap-pane -t $old'
bind-key -n "M-L" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -R; tmux swap-pane -t $old'
